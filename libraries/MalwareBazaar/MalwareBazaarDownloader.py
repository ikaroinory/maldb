import sqlite3

import requests
from tqdm import tqdm

from downloader import Downloader
from path import get_lib


class MalwareBazaarDownloader(Downloader):
    def __init__(self, db_path: str, download_path: str):
        api = get_lib()['MalwareBazaar']['api']
        super().__init__(api, db_path, download_path)

    def _download(self, sha256: str) -> bool:
        payload = {'query': 'get_file', 'sha256_hash': sha256}
        response = requests.post(self.api, data=payload, allow_redirects=True)

        if response.status_code != 200:
            return False

        if 'file_not_found' in response.text:
            with sqlite3.connect(self.db_path) as conn:
                cursor = conn.cursor()
                cursor.execute('insert or ignore into not_found_info values (?, ?)', (sha256, 'MalwareBazaar'))
                cursor.close()
            return False

        with open(f'{self.download_path}/{sha256}.zip', 'wb') as file:
            file.write(response.content)

        return True

    def download(self):
        with sqlite3.connect(self.db_path) as conn:
            cursor = conn.cursor()
            cursor.execute('''
                select sha256
                from malware_info
                where sha256 not in (select sha256 from download_info)
                  and sha256 not in (select sha256 from not_found_info where source = 'MalwareBazaar');
            ''')
            sha256_list = cursor.fetchall()
            cursor.close()

        sha256_list = [sha256[0] for sha256 in sha256_list]

        for sha256 in tqdm(sha256_list):
            if not self._download(sha256):
                print(f'[Error] Download from MalwareBazaar failed {sha256}.')
            else:
                with sqlite3.connect(self.db_path) as conn:
                    cursor = conn.cursor()
                    cursor.execute(
                        f'insert into download_info values (?, datetime(?, ?), ?, ?)',
                        (sha256, 'now', 'localtime', self.download_path, 'MalwareBazaar')
                    )
                    cursor.close()

        print(f'{len(sha256_list)} malware from MalwareBazaar downloaded successfully.')
