import sqlite3

import requests

from path import get_lib
from scanner import Scanner
from scanner.interface import ITagScanner, ITypeScanner


class MalwareBazaarScanner(Scanner, ITagScanner, ITypeScanner):
    def __init__(self, db_path: str):
        api = get_lib()['MalwareBazaar']['api']
        super().__init__(api, db_path)

    def _scan(self, payload: dict):
        response = requests.post(self.api, data=payload)

        data = response.json()
        if data['query_status'] != 'ok':
            print(data['query_status'])
            return

        malware_info_list = data['data']
        database_item_list = []
        for item in malware_info_list:
            database_item_list.append((item['sha256_hash'], 'MalwareBazaar'))
        with sqlite3.connect(self.db_path) as conn:
            cursor = conn.cursor()
            old_count = cursor.execute('select count(*) from malware_info').fetchone()[0]
            cursor.executemany('insert or ignore into malware_info(sha256, source) values (?, ?)',
                               database_item_list)
            new_count = cursor.execute('select count(*) from malware_info').fetchone()[0]
            print(f'{new_count - old_count} new entries from MalwareBazaar added.')
            cursor.close()

    def scan_by_tag(self, tag: str, limit: int = 1000):
        self._scan({'query': 'get_taginfo', 'tag': tag, 'limit': limit})

    def scan_by_type(self, file_type: str, limit: int = 1000):
        self._scan({'query': 'get_file_type', 'file_type': file_type, 'limit': limit})
